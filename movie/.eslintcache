[{"/home/daniyar/Рабочий стол/react/movie/src/index.tsx":"1","/home/daniyar/Рабочий стол/react/movie/src/reportWebVitals.ts":"2","/home/daniyar/Рабочий стол/react/movie/src/App.tsx":"3","/home/daniyar/Рабочий стол/react/movie/src/navigation/Navbar.tsx":"4","/home/daniyar/Рабочий стол/react/movie/src/MoviesList/Movies.tsx":"5","/home/daniyar/Рабочий стол/react/movie/src/Authorization/Register.tsx":"6","/home/daniyar/Рабочий стол/react/movie/src/Authorization/Login.tsx":"7","/home/daniyar/Рабочий стол/react/movie/src/db/axios.tsx":"8","/home/daniyar/Рабочий стол/react/movie/src/Authorization/Account.tsx":"9","/home/daniyar/Рабочий стол/react/movie/src/Error/AuthError.tsx":"10","/home/daniyar/Рабочий стол/react/movie/src/Context/AuthContext.tsx":"11","/home/daniyar/Рабочий стол/react/movie/src/Api/MovieApi.tsx":"12","/home/daniyar/Рабочий стол/react/movie/src/MovieDetails/MovieDetails.tsx":"13","/home/daniyar/Рабочий стол/react/movie/src/MovieDetails/FetchMovieDetails.tsx":"14","/home/daniyar/Рабочий стол/react/movie/src/MoviesList/FindMovies.tsx":"15","/home/daniyar/Рабочий стол/react/movie/src/Api/FindMovieApi.tsx":"16","/home/daniyar/Рабочий стол/react/movie/src/FavouritesMovies/Favourites.tsx":"17"},{"size":500,"mtime":1608118526361,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1608118526361,"results":"20","hashOfConfig":"19"},{"size":3272,"mtime":1608219476539,"results":"21","hashOfConfig":"19"},{"size":926,"mtime":1608212867086,"results":"22","hashOfConfig":"19"},{"size":2181,"mtime":1608213142215,"results":"23","hashOfConfig":"19"},{"size":1217,"mtime":1608208469058,"results":"24","hashOfConfig":"19"},{"size":1063,"mtime":1608199014655,"results":"25","hashOfConfig":"19"},{"size":123,"mtime":1608137987270,"results":"26","hashOfConfig":"19"},{"size":720,"mtime":1608208428650,"results":"27","hashOfConfig":"19"},{"size":157,"mtime":1608135980823,"results":"28","hashOfConfig":"19"},{"size":200,"mtime":1608149441228,"results":"29","hashOfConfig":"19"},{"size":216,"mtime":1608138134916,"results":"30","hashOfConfig":"19"},{"size":1904,"mtime":1608212826354,"results":"31","hashOfConfig":"19"},{"size":1132,"mtime":1608150689516,"results":"32","hashOfConfig":"19"},{"size":931,"mtime":1608194769192,"results":"33","hashOfConfig":"19"},{"size":266,"mtime":1608197472130,"results":"34","hashOfConfig":"19"},{"size":1406,"mtime":1608213527831,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1syzud2",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"38"},"/home/daniyar/Рабочий стол/react/movie/src/index.tsx",[],["81","82"],"/home/daniyar/Рабочий стол/react/movie/src/reportWebVitals.ts",[],"/home/daniyar/Рабочий стол/react/movie/src/App.tsx",["83","84","85"],"import React, { lazy, Suspense, useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport Login from \"./Authorization/Login\";\nimport Register from \"./Authorization/Register\";\nimport AuthContext from \"./Context/AuthContext\";\nimport instance from \"./db/axios\";\nimport Movies from \"./MoviesList/Movies\";\nimport User from \"./Model/User\";\nimport NavBar from './navigation/Navbar';\nimport Account from \"./Authorization/Account\";\nimport MovieDetails from \"./MovieDetails/MovieDetails\";\nimport Details from \"./Model/Details\";\nimport AuthState from \"./Model/AuthState\";\nimport Favourites from \"./FavouritesMovies/Favourites\";\n\nconst API_USERS = '/people'\n\nfunction App() {\n  const [users, setUsers] = useState<User[]>([])\n  const [isLogged, setIsLogged] = useState<AuthState>({isLogged: false})\n\n  useEffect(() => {\n    async function fetchUsers() {\n      const result = await instance.get(API_USERS)\n      setUsers([...result.data])\n    }\n\n    fetchUsers()\n  }, [])\n\n  function authenticateUser(username: string, password: string) {\n    const isPresent = users.find((user) => user.username === username && user.password === password) != null\n    const user = users.find((user) => user.username === username && user.password === password)\n    if (isPresent) {\n      setIsLogged({isLogged: isPresent, user: user})\n    }\n    else {\n      setIsLogged({isLogged: isPresent})\n    }\n  }\n\n  async function registerUser(user: User) {\n    const isPresent = users.find((u) => u.username === user.username && u.password === user.password) != null\n    if (isPresent) {\n      return\n    }\n    const result = await instance.post(API_USERS, user)\n    setIsLogged({isLogged: true, user: user})\n  }\n\n  async function addToFavourites(movieDetails: Details) {\n    let id = isLogged.user?.id\n    let user = isLogged.user\n    let isMoviePresent = user?.favourites.find((movie) => movie.id === movieDetails.id) != null\n    if(!isMoviePresent) {\n      user?.favourites.push(movieDetails)\n      const response = await instance.patch(`${API_USERS}/${id}`, user)\n    }  \n  }\n\n  function logoutUser() {\n    setIsLogged({isLogged: false})\n  }\n  \n  return (\n      <AuthContext.Provider value={isLogged}>\n        <Router>\n          <NavBar />\n          <div className=\"container\">\n            <Suspense fallback={<h1>Loading Route ...</h1>}>\n              <Switch>\n                <Route path=\"/\" exact component={Movies} />\n\n                <Route path=\"/login\">\n                  <Login login={authenticateUser}></Login>\n                </Route>\n\n                <Route path=\"/register\">\n                  <Register lastIndex={users.length} register={registerUser}></Register>\n                </Route>\n\n                <Route path=\"/account\">\n                  <Account logout={logoutUser}></Account>\n                </Route>\n                \n                <Route path=\"/favourites\">\n                  <Favourites></Favourites>\n                </Route>\n\n                <Route path=\"/:id\">\n                  <MovieDetails add={addToFavourites}></MovieDetails>\n                </Route>\n\n\n              </Switch>\n            </Suspense>\n          </div>\n        </Router>\n      </AuthContext.Provider>\n  );\n}\nexport default App;\n","/home/daniyar/Рабочий стол/react/movie/src/navigation/Navbar.tsx",["86"],"import React, { ReactElement, useContext } from \"react\";\nimport { Link } from 'react-router-dom'\nimport AuthContext from \"../Context/AuthContext\";\nimport './Navbar.css'\n\ninterface Props {}\n\nexport default function NavBar({}: Props): ReactElement {\n  const authState = useContext(AuthContext)\n  \n  return (\n    <div className=\"nav-bar\">\n      <ul>\n        <Link to=\"/\">\n          <li>Movies</li>\n        </Link>\n        {authState.isLogged ? \n        <Link to='/favourites'>\n          <li>Favourites</li>\n        </Link>\n        : null}\n        {authState.isLogged ? \n        <Link to='/account'>\n          <li>Account</li>\n        </Link>\n        : null}\n        {authState.isLogged ? null :  \n        <Link to=\"/login\">\n          <li>Login</li>\n        </Link>\n        }\n         {authState.isLogged ? null :  \n        <Link to=\"/register\">\n          <li>Register</li>\n        </Link>\n        }\n      </ul>\n    </div>\n  );\n}\n","/home/daniyar/Рабочий стол/react/movie/src/MoviesList/Movies.tsx",["87","88","89"],"import React, { ReactElement, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport findMovieApi from '../Api/FindMovieApi'\nimport movieApi from '../Api/MovieApi'\nimport Movie from '../Model/Movie'\nimport FindMovies from './FindMovies'\nimport './Movies.css'\n\nfunction Movies(): ReactElement {\n    console.log(\"Movies\")\n    const [movies, setMovies] = useState<any[]>([])\n    const [query, setQuery] = useState('')\n    \n\n    useEffect(() => {\n        async function fetchMovies() {\n            const response = await movieApi.get('')\n            console.log(response)\n            const movies = response.data.results\n            setMovies(movies)\n        }\n        fetchMovies()\n    }, [])\n    \n    useEffect(() => {\n        async function find() {\n            const response = await findMovieApi.get(query)\n            const movies = response.data.results\n            setMovies(movies)\n        }\n        find()\n    }, [query])\n\n    function getVoteAverageClass(average: number):string {\n        if (average > 7)\n            return 'green-title'\n        if (average >= 5)\n            return 'yellow-title'\n        return 'red-title'\n    }\n\n    return (\n        <div className='movies-page-container'>\n            <div className=\"search-container\">\n                <input type='text' placeholder='query' onChange={(e)=>setQuery(e.target.value)}></input>\n            </div>\n            <div className={'movies-container'}>\n                {movies && movies.map(({id, title, poster_path, vote_average}) => (\n                <Link to={'/'+id} key={id} className={'movie-item'} >\n                    <div className={'movie-item-image-container'}>\n                        <img className={'movie-item-image'} src={'https://image.tmdb.org/t/p/w500' + poster_path} />\n                    </div>\n                    <div className={'movie-item-title-container'}>\n                        <h3 className={'movie-item-title'}>{title}</h3>\n                        <h4 className={getVoteAverageClass(vote_average)}>{vote_average}</h4>\n                    </div>\n                </Link>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Movies","/home/daniyar/Рабочий стол/react/movie/src/Authorization/Register.tsx",[],"/home/daniyar/Рабочий стол/react/movie/src/Authorization/Login.tsx",["90"],"import React, { ReactElement, useContext, useState } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport AuthContext from '../Context/AuthContext';\nimport css from './Login.module.css'\n\ninterface Props{\n    login: (username: string, password: string) => void\n}\n\nexport default function Login({ login }: Props): ReactElement {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const authState = useContext(AuthContext)\n\n    function authorize() {\n        login(username, password)\n    }\n\n    return(\n        <div>\n            <div className={css.input_container}>\n                Login\n                <input type='text' placeholder='username' onChange={(e)=>setUsername(e.target.value)}></input>\n                <input type='text' placeholder='password'onChange={(e)=>setPassword(e.target.value)}></input>\n                <button onClick={() => authorize()}>Login</button>\n                {authState.isLogged == true ? <Redirect to='/account' /> : null}\n            </div>\n        </div>\n    );\n}","/home/daniyar/Рабочий стол/react/movie/src/db/axios.tsx",[],"/home/daniyar/Рабочий стол/react/movie/src/Authorization/Account.tsx",[],"/home/daniyar/Рабочий стол/react/movie/src/Error/AuthError.tsx",[],"/home/daniyar/Рабочий стол/react/movie/src/Context/AuthContext.tsx",["91"],"import React from 'react'\nimport AuthState from '../Model/AuthState'\nimport User from '../Model/User'\n\nconst AuthContext = React.createContext<AuthState>({isLogged: false})\n\nexport default AuthContext","/home/daniyar/Рабочий стол/react/movie/src/Api/MovieApi.tsx",[],["92","93"],"/home/daniyar/Рабочий стол/react/movie/src/MovieDetails/MovieDetails.tsx",["94","95"],"import React, { ReactElement, useContext, useEffect, useState } from 'react'\nimport { useRouteMatch } from 'react-router-dom'\nimport AuthContext from '../Context/AuthContext';\nimport Details from '../Model/Details';\nimport fetchMovieDetails from './FetchMovieDetails';\nimport './MovieDetails.css'\n\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500'\n\ninterface Props {\n  add: (details: Details) => void\n}\n\nexport default function MovieDetails({ add }: Props): ReactElement {\n    const match = useRouteMatch<{ id: string }>();\n    const source = 'https://api.themoviedb.org/3/movie/'+match.params.id+'?api_key=b82c172e7bf6660516881c6a1ed616dd'\n    const { loading, result, error } = fetchMovieDetails({dataSource: source});\n    const authState = useContext(AuthContext)\n\n    if (loading || error) {\n        return loading ? \"Loading...\" : error;\n    }\n\n    function addToFavourites() {\n      add(result)\n    }\n\n    return (\n        <div className={'movie-details-container'}>\n          <div className={'movie-details-mini-container'}>\n            <div className={'movie-img-container'}>\n              <img src={IMAGE_URL+result.poster_path} alt=\"movie\"/>\n            </div>\n            <div className={'movie-text-container'}>\n              <h2>{result.title}</h2>\n              <h3><span className={'movie-text'}>Rating:</span> {result.vote_average}</h3>\n              <p><span className={'movie-text'}>Overview:</span><br/>{result.overview}</p>\n              {authState.isLogged && authState.user?.favourites.find((movie) => movie.id === result.id) == null ? <button onClick={() => addToFavourites()}>Add to Favourites</button> : null}\n              {authState.isLogged && authState.user?.favourites.find((movie) => movie.id === result.id) != null ? <h3 className={'favourite-text'}>This film is already in favourite movies list</h3> : null}\n            </div>\n          </div>\n        </div>\n      );\n}","/home/daniyar/Рабочий стол/react/movie/src/MovieDetails/FetchMovieDetails.tsx",["96"],"import React, { useEffect, useState } from \"react\";\r\nimport Details from \"../Model/Details\";\r\n\r\ninterface Props {\r\n  dataSource: string;\r\n}\r\n\r\ninterface State {\r\n  result: Details;\r\n  loading?: boolean;\r\n  error?: any;\r\n}\r\n\r\nexport default function FetchMovieDetails({ dataSource }: Props): State {\r\n  const [loading, setLoading] = useState(true);\r\n  const [result, setResult] = useState<Details>({id: 0, title: '', poster_path: '', vote_average: 0, overview: ''});\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const data = await fetch(dataSource);\r\n        const json = await data.json();\r\n\r\n        if (json) {\r\n          let details: Details = {id: json.id, title: json.title, poster_path: json.poster_path, vote_average: json.vote_average, overview: json.overview}\r\n          setLoading(false);\r\n          setResult(details);\r\n        }\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setError(error.message);\r\n      }\r\n\r\n      setLoading(false);\r\n    }\r\n\r\n    fetchData();\r\n  }, [dataSource]);\r\n\r\n  return {error, loading, result};\r\n}\r\n","/home/daniyar/Рабочий стол/react/movie/src/MoviesList/FindMovies.tsx",["97"],"/home/daniyar/Рабочий стол/react/movie/src/Api/FindMovieApi.tsx",["98"],"import axios from 'axios'\n\nconst api_key = 'b82c172e7bf6660516881c6a1ed616dd'\n\nconst findMovieApi = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/search/movie?api_key=b82c172e7bf6660516881c6a1ed616dd&language=en-US&query='\n})\n\nexport default findMovieApi","/home/daniyar/Рабочий стол/react/movie/src/FavouritesMovies/Favourites.tsx",["99","100","101"],"import React, { ReactElement, useContext, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport AuthContext from '../Context/AuthContext'\nimport '../MoviesList/Movies.css'\n\nexport default function Favourites(): ReactElement {\n    const authState = useContext(AuthContext)\n    const movies = authState.user?.favourites\n\n    console.log(authState)\n\n    function getVoteAverageClass(average: number):string {\n        if (average > 7)\n            return 'green-title'\n        if (average >= 5)\n            return 'yellow-title'\n        return 'red-title'\n    }\n\n    return (\n        <div className='movies-page-container'>\n            <div className={'movies-container'}>\n                {movies && movies.map(({id, title, poster_path, vote_average}) => (\n                <Link to={'/'+id} key={id} className={'movie-item'} >\n                    <div className={'movie-item-image-container'}>\n                        <img className={'movie-item-image'} src={'https://image.tmdb.org/t/p/w500' + poster_path} />\n                    </div>\n                    <div className={'movie-item-title-container'}>\n                        <h3 className={'movie-item-title'}>{title}</h3>\n                        <h4 className={getVoteAverageClass(vote_average)}>{vote_average}</h4>\n                    </div>\n                </Link>\n                ))}\n            </div>\n        </div>\n    )\n}",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":21},{"ruleId":"106","severity":1,"message":"110","line":48,"column":11,"nodeType":"108","messageId":"109","endLine":48,"endColumn":17},{"ruleId":"106","severity":1,"message":"111","line":58,"column":13,"nodeType":"108","messageId":"109","endLine":58,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":8,"column":32,"nodeType":"114","messageId":"115","endLine":8,"endColumn":41},{"ruleId":"106","severity":1,"message":"116","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":13},{"ruleId":"106","severity":1,"message":"117","line":6,"column":8,"nodeType":"108","messageId":"109","endLine":6,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":51,"column":25,"nodeType":"120","endLine":51,"endColumn":117},{"ruleId":"121","severity":1,"message":"122","line":26,"column":37,"nodeType":"123","messageId":"115","endLine":26,"endColumn":39},{"ruleId":"106","severity":1,"message":"124","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":12},{"ruleId":"102","replacedBy":"125"},{"ruleId":"104","replacedBy":"126"},{"ruleId":"106","severity":1,"message":"127","line":1,"column":43,"nodeType":"108","messageId":"109","endLine":1,"endColumn":52},{"ruleId":"106","severity":1,"message":"128","line":1,"column":54,"nodeType":"108","messageId":"109","endLine":1,"endColumn":62},{"ruleId":"106","severity":1,"message":"129","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},{"ruleId":"106","severity":1,"message":"129","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},{"ruleId":"106","severity":1,"message":"130","line":3,"column":7,"nodeType":"108","messageId":"109","endLine":3,"endColumn":14},{"ruleId":"106","severity":1,"message":"127","line":1,"column":43,"nodeType":"108","messageId":"109","endLine":1,"endColumn":52},{"ruleId":"106","severity":1,"message":"128","line":1,"column":54,"nodeType":"108","messageId":"109","endLine":1,"endColumn":62},{"ruleId":"118","severity":1,"message":"119","line":26,"column":25,"nodeType":"120","endLine":26,"endColumn":117},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"@typescript-eslint/no-unused-vars","'lazy' is defined but never used.","Identifier","unusedVar","'result' is assigned a value but never used.","'response' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Movie' is defined but never used.","'FindMovies' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'User' is defined but never used.",["131"],["132"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'React' is defined but never used.","'api_key' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]