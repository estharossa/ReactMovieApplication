[{"/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/index.tsx":"1","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/reportWebVitals.ts":"2","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/App.tsx":"3","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Authorization/Login.tsx":"4","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Authorization/Register.tsx":"5","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Authorization/Account.tsx":"6","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Context/AuthContext.tsx":"7","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/db/axios.tsx":"8","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/MoviesList/Movies.tsx":"9","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/navigation/Navbar.tsx":"10","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/MovieDetails/MovieDetails.tsx":"11","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/FavouritesMovies/Favourites.tsx":"12","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Api/MovieApi.tsx":"13","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/store/reducers/AuthReducer.ts":"14","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Model/AuthAction.enum.ts":"15"},{"size":743,"mtime":1608579186189,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1608298083719,"results":"18","hashOfConfig":"17"},{"size":1661,"mtime":1608579186184,"results":"19","hashOfConfig":"17"},{"size":2100,"mtime":1608581666294,"results":"20","hashOfConfig":"17"},{"size":2393,"mtime":1608579186185,"results":"21","hashOfConfig":"17"},{"size":1174,"mtime":1608579186184,"results":"22","hashOfConfig":"17"},{"size":167,"mtime":1608488683226,"results":"23","hashOfConfig":"17"},{"size":123,"mtime":1608298083718,"results":"24","hashOfConfig":"17"},{"size":2775,"mtime":1608579186187,"results":"25","hashOfConfig":"17"},{"size":1378,"mtime":1608580254415,"results":"26","hashOfConfig":"17"},{"size":3495,"mtime":1608579186186,"results":"27","hashOfConfig":"17"},{"size":1774,"mtime":1608579186186,"results":"28","hashOfConfig":"17"},{"size":128,"mtime":1608487512423,"results":"29","hashOfConfig":"17"},{"size":877,"mtime":1608579186190,"results":"30","hashOfConfig":"17"},{"size":144,"mtime":1608579186186,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u90gsm",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/index.tsx",[],"/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/reportWebVitals.ts",[],"/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/App.tsx",["69","70","71"],"import React, {lazy, Suspense} from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport './App.css';\n\nconst LoginPage = lazy(() => import(\"./Authorization/Login\"))\nconst RegistrationPage = lazy(() => import(\"./Authorization/Register\"))\nconst MoviesPage = lazy(() => import(\"./MoviesList/Movies\"))\nconst AccountPage = lazy(() => import(\"./Authorization/Account\"))\nconst NavigationBar = lazy(() => import(\"./navigation/Navbar\"))\nconst MovieDetailsPage = lazy(() => import(\"./MovieDetails/MovieDetails\"))\nconst FavouritesPage = lazy(() => import(\"./FavouritesMovies/Favourites\"))\n\nfunction App() {\n    return (\n        <Router>\n            <Suspense fallback={<h1>Loading Route ...</h1>}>\n                <NavigationBar/>\n                <div className=\"container\">\n\n                    <Switch>\n                        <Route path=\"/\" exact component={MoviesPage}/>\n\n                        <Route path=\"/login\">\n                            <LoginPage/>\n                        </Route>\n\n                        <Route path=\"/register\">\n                            <RegistrationPage/>\n                        </Route>\n\n                        <Route path=\"/account\">\n                            <AccountPage/>\n                        </Route>\n\n                        <Route path=\"/favourites\">\n                            <FavouritesPage/>\n                        </Route>\n\n                        <Route path=\"/:id\">\n                            <MovieDetailsPage/>\n                        </Route>\n\n                    </Switch>\n                </div>\n            </Suspense>\n        </Router>\n    );\n}\n\nexport default App;\n",["72","73"],"/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Authorization/Login.tsx",["74","75"],"/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Authorization/Register.tsx",[],"/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Authorization/Account.tsx",["76"],"import React, {useContext, useReducer} from 'react'\nimport {Redirect} from 'react-router-dom';\nimport AuthContext from '../Context/AuthContext';\nimport './Account.css'\n\ninterface Props {\n    logout: () => void\n}\n\nexport default function Account({logout}: Props) {\n    const authState = useContext(AuthContext)\n    console.log(authState.user)\n    return (\n        <div className='account-container'>\n            <h2>Current state: {authState.isLogged && 'authorized'}</h2>\n            <h2>Usename: {authState.user?.username}</h2>\n            <h2>Password: {authState.user?.password}</h2>\n            <button onClick={logout}>Logout</button>\n            {!authState.isLogged ? <Redirect to='/'/> : null}\n        </div>\n    )\n}\n","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Context/AuthContext.tsx",["77"],"import React from 'react'\nimport AuthState from '../Model/AuthState'\n\nconst AuthContext = React.createContext<AuthState>({isLogged: false})\n\nexport default AuthContext","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/db/axios.tsx",[],"/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/MoviesList/Movies.tsx",["78","79","80"],"import React, { Fragment, ReactElement, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport findMovieApi from '../Api/FindMovieApi'\nimport movieApi from '../Api/MovieApi'\nimport Movie from '../Model/Movie'\nimport FindMovies from './FindMovies'\nimport './Movies.css'\n\nfunction Movies(): ReactElement {\n    console.log(\"Movies\")\n    const [movies, setMovies] = useState<any[]>([])\n    const [query, setQuery] = useState('')\n    \n\n    useEffect(() => {\n        async function fetchMovies() {\n            const response = await movieApi.get('')\n            console.log(response)\n            const movies = response.data.results\n            setMovies(movies)\n        }\n        fetchMovies()\n    }, [])\n    \n    useEffect(() => {\n        async function find() {\n            const response = await findMovieApi.get(query)\n            const movies = response.data.results\n            setMovies(movies)\n        }\n        find()\n    }, [query])\n\n    function getVoteAverageClass(average: number):string {\n        if (average > 7)\n            return 'green-title'\n        if (average >= 5)\n            return 'yellow-title'\n        return 'red-title'\n    }\n\n    return (\n        <div className='movies-page-container'>\n            <div className=\"search-container\">\n                <input type='text' placeholder='query' onChange={(e)=>setQuery(e.target.value)}></input>\n            </div>\n            <div className={'movies-container'}>\n                {movies && movies.map(({id, title, poster_path, vote_average}) => (\n                    <Fragment key={id} >\n                        <Link to={'/'+id} className={'movie-item'} >\n                            <div className={'movie-item-image-container'}>\n                                <img className={'movie-item-image'} src={'https://image.tmdb.org/t/p/w500' + poster_path} />\n                            </div>\n                            <div className={'movie-item-title-container'}>\n                                <h3 className={'movie-item-title'}>{title}</h3>\n                                <h4 className={getVoteAverageClass(vote_average)}>{vote_average}</h4>\n                            </div>\n                        </Link>\n                    </Fragment>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Movies","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/navigation/Navbar.tsx",["81","82","83","84"],"/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/MovieDetails/MovieDetails.tsx",["85","86","87"],"import React, {ReactElement, useContext, useEffect, useState} from 'react'\nimport {useRouteMatch} from 'react-router-dom'\nimport movieApi from '../Api/MovieApi';\nimport AuthContext from '../Context/AuthContext';\nimport Details from '../Model/Details';\nimport './MovieDetails.css'\n\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500'\nconst DEFAULT_IMAGE_URL = 'https://d1csarkz8obe9u.cloudfront.net/posterpreviews/space-movie-poster-design-template-18133e937d93002c68b4649ea234d75f_screen.jpg?ts=1573539500'\n\ninterface Props {\n    add: (details: Details) => void\n}\n\nexport default function MovieDetails({add}: Props): ReactElement {\n    const match = useRouteMatch<{ id: string }>();\n    const [movieDetails, setMovieDetails] = useState<Details>(\n        {id: 0, title: \"\", poster_path: \"\", vote_average: 0, overview: \"\"}\n    )\n    const authState = useContext(AuthContext)\n    const isPresent = !!authState.user?.favourites.find((movie) => movie.id == movieDetails.id)\n    const [isAlreadyPresent, setIsAlreadyPresent] = useState<Boolean>(isPresent)\n    const details_query = '3/movie/' + match.params.id + '?api_key=b82c172e7bf6660516881c6a1ed616dd'\n\n    useEffect(() => {\n        async function fetchMovieDetails() {\n            const response = await movieApi.get(details_query)\n            const result = response.data\n            let details: Details = {\n                id: result.id,\n                title: result.title,\n                poster_path: result.poster_path,\n                vote_average: result.vote_average,\n                overview: result.overview\n            }\n            setMovieDetails(result)\n            setIsAlreadyPresent(!!authState.user?.favourites.find((movie) => movie.id == details.id))\n        }\n\n        fetchMovieDetails()\n    }, [])\n\n    function addToFavourites() {\n        setIsAlreadyPresent(true)\n        add(movieDetails)\n    }\n\n    return (\n        <div className={'movie-details-container'}>\n            <div className={'movie-details-mini-container'}>\n                <div className={'movie-img-container'}>\n                    <img\n                        src={movieDetails.poster_path != null ? IMAGE_URL + movieDetails.poster_path : DEFAULT_IMAGE_URL}\n                        alt='movie_poster'/>\n                </div>\n                <div className={'movie-text-container'}>\n                    <h2>{movieDetails.title}</h2>\n                    <h3><span className={'movie-text'}>Rating:</span> {movieDetails.vote_average}</h3>\n                    <p><span className={'movie-text'}>Overview:</span><br/>{movieDetails.overview}</p>\n                    {authState.isLogged && !isAlreadyPresent ?\n                        <button onClick={() => addToFavourites()}>Add to Favourites</button> : null}\n                    {authState.isLogged && isAlreadyPresent ?\n                        <h3 className={'favourite-text'}>You have added the movie to your favourites list</h3> : null}\n                </div>\n            </div>\n        </div>\n    );\n}","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/FavouritesMovies/Favourites.tsx",["88","89","90","91"],"import React, {Fragment, ReactElement, useContext, useEffect, useReducer, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport AuthContext from '../Context/AuthContext'\nimport '../MoviesList/Movies.css'\n\nexport default function Favourites(): ReactElement {\n    const authState = useContext(AuthContext)\n    const movies = authState.user?.favourites\n\n    console.log(authState)\n\n    function getVoteAverageClass(average: number): string {\n        if (average > 7)\n            return 'green-title'\n        if (average >= 5)\n            return 'yellow-title'\n        return 'red-title'\n    }\n\n    return (\n        <div className='movies-page-container'>\n            <div className={'movies-container'}>\n                {movies && movies.map(({id, title, poster_path, vote_average}) => (\n                    <Fragment key={id}>\n                        <Link to={'/' + id} className={'movie-item'}>\n                            <div className={'movie-item-image-container'}>\n                                <img className={'movie-item-image'}\n                                     src={'https://image.tmdb.org/t/p/w500' + poster_path}/>\n                            </div>\n                            <div className={'movie-item-title-container'}>\n                                <h3 className={'movie-item-title'}>{title}</h3>\n                                <h4 className={getVoteAverageClass(vote_average)}>{vote_average}</h4>\n                            </div>\n                        </Link>\n                    </Fragment>\n                ))}\n            </div>\n        </div>\n    )\n}\n","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Api/MovieApi.tsx",[],"/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/store/reducers/AuthReducer.ts",[],"/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Model/AuthAction.enum.ts",[],{"ruleId":"92","severity":1,"message":"93","line":9,"column":9,"nodeType":"94","messageId":"95","endLine":9,"endColumn":17},{"ruleId":"92","severity":1,"message":"96","line":50,"column":15,"nodeType":"94","messageId":"95","endLine":50,"endColumn":21},{"ruleId":"92","severity":1,"message":"97","line":60,"column":19,"nodeType":"94","messageId":"95","endLine":60,"endColumn":27},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"92","severity":1,"message":"102","line":1,"column":43,"nodeType":"94","messageId":"95","endLine":1,"endColumn":53},{"ruleId":"103","severity":1,"message":"104","line":16,"column":31,"nodeType":"105","messageId":"106","endLine":16,"endColumn":40},{"ruleId":"92","severity":1,"message":"107","line":1,"column":28,"nodeType":"94","messageId":"95","endLine":1,"endColumn":38},{"ruleId":"92","severity":1,"message":"108","line":3,"column":8,"nodeType":"94","messageId":"95","endLine":3,"endColumn":12},{"ruleId":"92","severity":1,"message":"109","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":13},{"ruleId":"92","severity":1,"message":"110","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":51,"column":25,"nodeType":"113","endLine":51,"endColumn":117},{"ruleId":"92","severity":1,"message":"114","line":1,"column":30,"nodeType":"94","messageId":"95","endLine":1,"endColumn":41},{"ruleId":"92","severity":1,"message":"102","line":1,"column":43,"nodeType":"94","messageId":"95","endLine":1,"endColumn":53},{"ruleId":"92","severity":1,"message":"115","line":3,"column":8,"nodeType":"94","messageId":"95","endLine":3,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":11,"column":32,"nodeType":"105","messageId":"106","endLine":11,"endColumn":41},{"ruleId":"116","severity":1,"message":"117","line":21,"column":77,"nodeType":"118","messageId":"106","endLine":21,"endColumn":79},{"ruleId":"116","severity":1,"message":"117","line":33,"column":83,"nodeType":"118","messageId":"106","endLine":33,"endColumn":85},{"ruleId":"119","severity":1,"message":"120","line":36,"column":8,"nodeType":"121","endLine":36,"endColumn":10,"suggestions":"122"},{"ruleId":"92","severity":1,"message":"123","line":1,"column":52,"nodeType":"94","messageId":"95","endLine":1,"endColumn":61},{"ruleId":"92","severity":1,"message":"107","line":1,"column":63,"nodeType":"94","messageId":"95","endLine":1,"endColumn":73},{"ruleId":"92","severity":1,"message":"124","line":1,"column":75,"nodeType":"94","messageId":"95","endLine":1,"endColumn":83},{"ruleId":"111","severity":1,"message":"112","line":27,"column":33,"nodeType":"113","endLine":27,"endColumn":125},"@typescript-eslint/no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'result' is assigned a value but never used.","'response' is assigned a value but never used.","no-native-reassign",["125"],"no-negated-in-lhs",["126"],"'useContext' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'useReducer' is defined but never used.","'User' is defined but never used.","'Movie' is defined but never used.","'FindMovies' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useCallback' is defined but never used.","'AuthContext' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authState.user?.favourites' and 'details_query'. Either include them or remove the dependency array.","ArrayExpression",["127"],"'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},"Update the dependencies array to be: [authState.user?.favourites, details_query]",{"range":"130","text":"131"},[1665,1667],"[authState.user?.favourites, details_query]"]