[{"/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/index.tsx":"1","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/reportWebVitals.ts":"2","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/App.tsx":"3","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Authorization/Login.tsx":"4","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Authorization/Register.tsx":"5","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Authorization/Account.tsx":"6","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Context/AuthContext.tsx":"7","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/db/axios.tsx":"8","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/MoviesList/Movies.tsx":"9","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/navigation/Navbar.tsx":"10","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/MovieDetails/MovieDetails.tsx":"11","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/FavouritesMovies/Favourites.tsx":"12","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Api/MovieApi.tsx":"13"},{"size":500,"mtime":1608298083718,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1608298083719,"results":"16","hashOfConfig":"15"},{"size":3891,"mtime":1608488683218,"results":"17","hashOfConfig":"15"},{"size":1090,"mtime":1608488683219,"results":"18","hashOfConfig":"15"},{"size":1573,"mtime":1608488683220,"results":"19","hashOfConfig":"15"},{"size":725,"mtime":1608488683219,"results":"20","hashOfConfig":"15"},{"size":167,"mtime":1608488683226,"results":"21","hashOfConfig":"15"},{"size":123,"mtime":1608298083718,"results":"22","hashOfConfig":"15"},{"size":2812,"mtime":1608488683229,"results":"23","hashOfConfig":"15"},{"size":1190,"mtime":1608488683229,"results":"24","hashOfConfig":"15"},{"size":2993,"mtime":1608488683228,"results":"25","hashOfConfig":"15"},{"size":1598,"mtime":1608488683227,"results":"26","hashOfConfig":"15"},{"size":128,"mtime":1608487512423,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u90gsm",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/index.tsx",[],"/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/reportWebVitals.ts",[],"/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/App.tsx",["62","63","64"],"/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Authorization/Login.tsx",["65"],"import React, {ReactElement, useContext, useState} from 'react'\nimport {Redirect} from 'react-router-dom';\nimport AuthContext from '../Context/AuthContext';\nimport css from './Register.module.css'\n\ninterface Props {\n    login: (username: string, password: string) => void\n}\n\nexport default function Login({login}: Props): ReactElement {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const authState = useContext(AuthContext)\n\n    function authorize() {\n        login(username, password)\n    }\n\n    return (\n        <div className={css.input_container}>\n            <div className={css.input_card}>\n                <h1>Login</h1>\n                <input type='text' placeholder='Username...' onChange={(e) => setUsername(e.target.value)}/>\n                <input type='password' placeholder='Password...' onChange={(e) => setPassword(e.target.value)}/>\n                <button onClick={() => authorize()}>Login</button>\n                {authState.isLogged ? <Redirect to='/account'/> : null}\n            </div>\n        </div>\n    );\n}",["66","67"],"/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Authorization/Register.tsx",[],"/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Authorization/Account.tsx",["68"],"import React, {useContext, useReducer} from 'react'\nimport {Redirect} from 'react-router-dom';\nimport AuthContext from '../Context/AuthContext';\nimport './Account.css'\n\ninterface Props {\n    logout: () => void\n}\n\nexport default function Account({logout}: Props) {\n    const authState = useContext(AuthContext)\n    console.log(authState.user)\n    return (\n        <div className='account-container'>\n            <h2>Current state: {authState.isLogged && 'authorized'}</h2>\n            <h2>Usename: {authState.user?.username}</h2>\n            <h2>Password: {authState.user?.password}</h2>\n            <button onClick={logout}>Logout</button>\n            {!authState.isLogged ? <Redirect to='/'/> : null}\n        </div>\n    )\n}\n","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Context/AuthContext.tsx",["69"],"import React from 'react'\nimport AuthState from '../Model/AuthState'\n\nconst AuthContext = React.createContext<AuthState>({isLogged: false})\n\nexport default AuthContext","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/db/axios.tsx",[],"/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/MoviesList/Movies.tsx",["70","71","72"],"import React, { Fragment, ReactElement, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport findMovieApi from '../Api/FindMovieApi'\nimport movieApi from '../Api/MovieApi'\nimport Movie from '../Model/Movie'\nimport FindMovies from './FindMovies'\nimport './Movies.css'\n\nfunction Movies(): ReactElement {\n    console.log(\"Movies\")\n    const [movies, setMovies] = useState<any[]>([])\n    const [query, setQuery] = useState('')\n    \n\n    useEffect(() => {\n        async function fetchMovies() {\n            const response = await movieApi.get('')\n            console.log(response)\n            const movies = response.data.results\n            setMovies(movies)\n        }\n        fetchMovies()\n    }, [])\n    \n    useEffect(() => {\n        async function find() {\n            const response = await findMovieApi.get(query)\n            const movies = response.data.results\n            setMovies(movies)\n        }\n        find()\n    }, [query])\n\n    function getVoteAverageClass(average: number):string {\n        if (average > 7)\n            return 'green-title'\n        if (average >= 5)\n            return 'yellow-title'\n        return 'red-title'\n    }\n\n    return (\n        <div className='movies-page-container'>\n            <div className=\"search-container\">\n                <input type='text' placeholder='query' onChange={(e)=>setQuery(e.target.value)}></input>\n            </div>\n            <div className={'movies-container'}>\n                {movies && movies.map(({id, title, poster_path, vote_average}) => (\n                    <Fragment key={id} >\n                        <Link to={'/'+id} className={'movie-item'} >\n                            <div className={'movie-item-image-container'}>\n                                <img className={'movie-item-image'} src={'https://image.tmdb.org/t/p/w500' + poster_path} />\n                            </div>\n                            <div className={'movie-item-title-container'}>\n                                <h3 className={'movie-item-title'}>{title}</h3>\n                                <h4 className={getVoteAverageClass(vote_average)}>{vote_average}</h4>\n                            </div>\n                        </Link>\n                    </Fragment>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Movies","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/navigation/Navbar.tsx",["73"],"import React, {ReactElement, useContext} from \"react\";\nimport {Link} from 'react-router-dom'\nimport AuthContext from \"../Context/AuthContext\";\nimport './Navbar.css'\n\ninterface Props {\n}\n\nexport default function NavBar({}: Props): ReactElement {\n    const authState = useContext(AuthContext)\n\n    return (\n        <div className=\"nav-bar\">\n            <ul>\n                <Link to=\"/\">\n                    <li>Movies</li>\n                </Link>\n                {authState.isLogged ?\n                    <Link to='/favourites'>\n                        <li>Favourites</li>\n                    </Link>\n                    : null}\n                {authState.isLogged ?\n                    <Link to='/account'>\n                        <li>Account</li>\n                    </Link>\n                    : null}\n                {authState.isLogged ? null :\n                    <Link to=\"/login\">\n                        <li>Login</li>\n                    </Link>\n                }\n                {authState.isLogged ? null :\n                    <Link to=\"/register\">\n                        <li>Register</li>\n                    </Link>\n                }\n            </ul>\n        </div>\n    );\n}\n","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/MovieDetails/MovieDetails.tsx",["74","75","76"],"import React, {ReactElement, useContext, useEffect, useState} from 'react'\nimport {useRouteMatch} from 'react-router-dom'\nimport movieApi from '../Api/MovieApi';\nimport AuthContext from '../Context/AuthContext';\nimport Details from '../Model/Details';\nimport './MovieDetails.css'\n\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500'\nconst DEFAULT_IMAGE_URL = 'https://d1csarkz8obe9u.cloudfront.net/posterpreviews/space-movie-poster-design-template-18133e937d93002c68b4649ea234d75f_screen.jpg?ts=1573539500'\n\ninterface Props {\n    add: (details: Details) => void\n}\n\nexport default function MovieDetails({add}: Props): ReactElement {\n    const match = useRouteMatch<{ id: string }>();\n    const [movieDetails, setMovieDetails] = useState<Details>(\n        {id: 0, title: \"\", poster_path: \"\", vote_average: 0, overview: \"\"}\n    )\n    const authState = useContext(AuthContext)\n    const isPresent = !!authState.user?.favourites.find((movie) => movie.id == movieDetails.id)\n    const [isAlreadyPresent, setIsAlreadyPresent] = useState<Boolean>(isPresent)\n    const details_query = '3/movie/' + match.params.id + '?api_key=b82c172e7bf6660516881c6a1ed616dd'\n\n    useEffect(() => {\n        async function fetchMovieDetails() {\n            const response = await movieApi.get(details_query)\n            const result = response.data\n            let details: Details = {\n                id: result.id,\n                title: result.title,\n                poster_path: result.poster_path,\n                vote_average: result.vote_average,\n                overview: result.overview\n            }\n            setMovieDetails(result)\n            setIsAlreadyPresent(!!authState.user?.favourites.find((movie) => movie.id == details.id))\n        }\n\n        fetchMovieDetails()\n    }, [])\n\n    function addToFavourites() {\n        setIsAlreadyPresent(true)\n        add(movieDetails)\n    }\n\n    return (\n        <div className={'movie-details-container'}>\n            <div className={'movie-details-mini-container'}>\n                <div className={'movie-img-container'}>\n                    <img\n                        src={movieDetails.poster_path != null ? IMAGE_URL + movieDetails.poster_path : DEFAULT_IMAGE_URL}\n                        alt='movie_poster'/>\n                </div>\n                <div className={'movie-text-container'}>\n                    <h2>{movieDetails.title}</h2>\n                    <h3><span className={'movie-text'}>Rating:</span> {movieDetails.vote_average}</h3>\n                    <p><span className={'movie-text'}>Overview:</span><br/>{movieDetails.overview}</p>\n                    {authState.isLogged && !isAlreadyPresent ?\n                        <button onClick={() => addToFavourites()}>Add to Favourites</button> : null}\n                    {authState.isLogged && isAlreadyPresent ?\n                        <h3 className={'favourite-text'}>You have added the movie to your favourites list</h3> : null}\n                </div>\n            </div>\n        </div>\n    );\n}","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/FavouritesMovies/Favourites.tsx",["77","78","79","80"],"import React, {Fragment, ReactElement, useContext, useEffect, useReducer, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport AuthContext from '../Context/AuthContext'\nimport '../MoviesList/Movies.css'\n\nexport default function Favourites(): ReactElement {\n    const authState = useContext(AuthContext)\n    const movies = authState.user?.favourites\n\n    console.log(authState)\n\n    function getVoteAverageClass(average: number): string {\n        if (average > 7)\n            return 'green-title'\n        if (average >= 5)\n            return 'yellow-title'\n        return 'red-title'\n    }\n\n    return (\n        <div className='movies-page-container'>\n            <div className={'movies-container'}>\n                {movies && movies.map(({id, title, poster_path, vote_average}) => (\n                    <Fragment key={id}>\n                        <Link to={'/' + id} className={'movie-item'}>\n                            <div className={'movie-item-image-container'}>\n                                <img className={'movie-item-image'}\n                                     src={'https://image.tmdb.org/t/p/w500' + poster_path}/>\n                            </div>\n                            <div className={'movie-item-title-container'}>\n                                <h3 className={'movie-item-title'}>{title}</h3>\n                                <h4 className={getVoteAverageClass(vote_average)}>{vote_average}</h4>\n                            </div>\n                        </Link>\n                    </Fragment>\n                ))}\n            </div>\n        </div>\n    )\n}\n","/Users/abylay/Desktop/reactFinal2/ReactMovieApplication/movie/src/Api/MovieApi.tsx",[],{"ruleId":"81","severity":1,"message":"82","line":9,"column":9,"nodeType":"83","messageId":"84","endLine":9,"endColumn":17},{"ruleId":"81","severity":1,"message":"85","line":50,"column":15,"nodeType":"83","messageId":"84","endLine":50,"endColumn":21},{"ruleId":"81","severity":1,"message":"86","line":60,"column":19,"nodeType":"83","messageId":"84","endLine":60,"endColumn":27},{"ruleId":"87","severity":1,"message":"88","line":26,"column":37,"nodeType":"89","messageId":"90","endLine":26,"endColumn":39},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"81","severity":1,"message":"95","line":1,"column":28,"nodeType":"83","messageId":"84","endLine":1,"endColumn":38},{"ruleId":"81","severity":1,"message":"96","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":12},{"ruleId":"81","severity":1,"message":"97","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":13},{"ruleId":"81","severity":1,"message":"98","line":6,"column":8,"nodeType":"83","messageId":"84","endLine":6,"endColumn":18},{"ruleId":"99","severity":1,"message":"100","line":51,"column":25,"nodeType":"101","endLine":51,"endColumn":117},{"ruleId":"102","severity":1,"message":"103","line":8,"column":32,"nodeType":"104","messageId":"90","endLine":8,"endColumn":41},{"ruleId":"87","severity":1,"message":"88","line":21,"column":77,"nodeType":"89","messageId":"90","endLine":21,"endColumn":79},{"ruleId":"87","severity":1,"message":"88","line":33,"column":83,"nodeType":"89","messageId":"90","endLine":33,"endColumn":85},{"ruleId":"105","severity":1,"message":"106","line":36,"column":8,"nodeType":"107","endLine":36,"endColumn":10,"suggestions":"108"},{"ruleId":"81","severity":1,"message":"109","line":1,"column":52,"nodeType":"83","messageId":"84","endLine":1,"endColumn":61},{"ruleId":"81","severity":1,"message":"95","line":1,"column":63,"nodeType":"83","messageId":"84","endLine":1,"endColumn":73},{"ruleId":"81","severity":1,"message":"110","line":1,"column":75,"nodeType":"83","messageId":"84","endLine":1,"endColumn":83},{"ruleId":"99","severity":1,"message":"100","line":27,"column":33,"nodeType":"101","endLine":27,"endColumn":125},"@typescript-eslint/no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'result' is assigned a value but never used.","'response' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["111"],"no-negated-in-lhs",["112"],"'useReducer' is defined but never used.","'User' is defined but never used.","'Movie' is defined but never used.","'FindMovies' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authState.user?.favourites' and 'details_query'. Either include them or remove the dependency array.","ArrayExpression",["113"],"'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [authState.user?.favourites, details_query]",{"range":"116","text":"117"},[1665,1667],"[authState.user?.favourites, details_query]"]