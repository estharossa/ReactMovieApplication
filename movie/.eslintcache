[{"/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/index.tsx":"1","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/reportWebVitals.ts":"2","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/store/reducers/AuthReducer.ts":"3","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/App.tsx":"4","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Model/AuthAction.enum.ts":"5","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Context/AuthContext.tsx":"6","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/db/axios.tsx":"7","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Authorization/Login.tsx":"8","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Authorization/Register.tsx":"9","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Authorization/Account.tsx":"10","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/MoviesList/Movies.tsx":"11","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/navigation/Navbar.tsx":"12","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/FavouritesMovies/Favourites.tsx":"13","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/MovieDetails/MovieDetails.tsx":"14","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Api/MovieApi.tsx":"15","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/ErrorBoundary.tsx":"16"},{"size":743,"mtime":1608572946795,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1608468241451,"results":"19","hashOfConfig":"18"},{"size":877,"mtime":1608576651792,"results":"20","hashOfConfig":"18"},{"size":2692,"mtime":1608581518461,"results":"21","hashOfConfig":"18"},{"size":144,"mtime":1608575818009,"results":"22","hashOfConfig":"18"},{"size":167,"mtime":1608488611446,"results":"23","hashOfConfig":"18"},{"size":123,"mtime":1608468241451,"results":"24","hashOfConfig":"18"},{"size":1911,"mtime":1608574862607,"results":"25","hashOfConfig":"18"},{"size":2393,"mtime":1608576651808,"results":"26","hashOfConfig":"18"},{"size":1174,"mtime":1608577145366,"results":"27","hashOfConfig":"18"},{"size":2775,"mtime":1608576516768,"results":"28","hashOfConfig":"18"},{"size":1392,"mtime":1608572338681,"results":"29","hashOfConfig":"18"},{"size":1774,"mtime":1608573447277,"results":"30","hashOfConfig":"18"},{"size":3578,"mtime":1608581563882,"results":"31","hashOfConfig":"18"},{"size":128,"mtime":1608468241451,"results":"32","hashOfConfig":"18"},{"size":807,"mtime":1608578505017,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"13zhv6z",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/index.tsx",[],["74","75"],"/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/reportWebVitals.ts",[],"/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/store/reducers/AuthReducer.ts",[],"/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/App.tsx",[],"/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Model/AuthAction.enum.ts",[],"/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Context/AuthContext.tsx",[],["76","77"],"/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/db/axios.tsx",[],"/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Authorization/Login.tsx",["78","79"],"import React, {ReactElement, useContext, useEffect, useState} from 'react'\nimport {Redirect} from 'react-router-dom';\nimport AuthContext from '../Context/AuthContext';\nimport css from './Register.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport AuthState from \"../Model/AuthState\";\nimport User from \"../Model/User\";\nimport instance from \"../db/axios\";\nimport {AuthAction} from \"../Model/AuthAction.enum\";\n\ninterface Props {\n\n}\n\nconst API_USERS = '/people'\n\nexport default function Login({}: Props): ReactElement {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [users, setUsers] = useState<User[]>([])\n    const authState = useSelector<AuthState>((state: AuthState) => state) as AuthState\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        async function fetchUsers() {\n            const result = await instance.get(API_USERS)\n            setUsers([...result.data])\n        }\n\n        fetchUsers()\n    }, [])\n\n    function authenticateUser() {\n        const isPresent = users.find((user) => user.username === username && user.password === password) != null\n        const user = users.find((user) => user.username === username && user.password === password)\n        if (isPresent) {\n            dispatch({type: AuthAction.LOGIN, user: user})\n        } else {\n            dispatch({type: AuthAction.LOGIN})\n        }\n    }\n\n    return (\n        <div className={css.input_container}>\n            <div className={css.input_card}>\n                <h1>Login</h1>\n                <input type='text' placeholder='Username...' onChange={(e) => setUsername(e.target.value)}/>\n                <input type='password' placeholder='Password...' onChange={(e) => setPassword(e.target.value)}/>\n                <button onClick={authenticateUser}>Login</button>\n                {authState.isLogged ? <Redirect to='/account'/> : null}\n            </div>\n        </div>\n    );\n}","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Authorization/Register.tsx",["80","81","82","83","84","85","86","87","88","89","90"],"import React, {ReactElement, useContext, useEffect, useState} from 'react'\nimport {Redirect} from 'react-router-dom';\nimport AuthContext from '../Context/AuthContext';\nimport User from '../Model/User';\nimport css from './Register.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport AuthState from \"../Model/AuthState\";\nimport instance from \"../db/axios\";\nimport {AuthAction} from \"../Model/AuthAction.enum\";\n\nconst EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n\ninterface Props {\n}\n\nconst API_USERS = '/people'\n\nexport default function Register({}: Props): ReactElement {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('')\n    const [users, setUsers] = useState<User[]>([])\n\n    const authState = useSelector<AuthState>((state: AuthState) => state) as AuthState\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        async function fetchUsers() {\n            const result = await instance.get(API_USERS)\n            setUsers([...result.data])\n        }\n\n        fetchUsers()\n    }, [])\n\n    async function createUser() {\n        const isPresent = !!users.find((u) => u.username === username)\n        if (isPresent) {\n            // TODO handle case when the user is already registered\n            return\n        } else {\n            let user: User = {id: users.length, username: username, password: password, favourites: []}\n            const result = await instance.post(API_USERS, user)\n            dispatch({type: AuthAction.REGISTER, user: user})\n        }\n    }\n\n    function validate() {\n        if (username.length == 0 || password.length == 0 && email.length == 0) {\n            alert(\"There are some missing fields.\")\n            return\n        }\n        createUser()\n    }\n\n    return (\n        <div className={css.input_container}>\n            <div className={css.input_card}>\n                <h1>Registration</h1>\n                <input type='text' placeholder='Username...' onChange={(e) => setUsername(e.target.value)}/>\n                <input type='password' placeholder='Password...' onChange={(e) => setPassword(e.target.value)}/>\n                <button onClick={() => validate()}>Register</button>\n                {authState.isLogged ? <Redirect to='/account'/> : null}\n            </div>\n        </div>\n    )\n}","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Authorization/Account.tsx",["91","92","93","94"],"import React, {useContext, useReducer} from 'react'\nimport {Redirect} from 'react-router-dom';\nimport AuthContext from '../Context/AuthContext';\nimport './Account.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport AuthState from \"../Model/AuthState\";\nimport {AuthAction} from \"../Model/AuthAction.enum\";\nimport css from './Register.module.css'\n\ninterface Props {\n}\n\nexport default function Account({}: Props) {\n    const authState = useSelector<AuthState>((state: AuthState) => state) as AuthState\n    const dispatch = useDispatch()\n\n    function logout() {\n        dispatch({type: AuthAction.LOGOUT})\n    }\n\n    return (\n        <div className={css.input_container}>\n            <div className={css.input_card}>\n                <h1>Account Details</h1>\n                <h2><span>Current state:</span> {authState.isLogged && 'Authorized'}</h2>\n                <h2><span>Username:</span> {authState.user?.username}</h2>\n                <h2><span>Password:</span> {authState.user?.password}</h2>\n                <button onClick={logout}>Logout</button>\n                {!authState.isLogged ? <Redirect to='/'/> : null}\n            </div>\n        </div>\n    )\n}\n","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/MoviesList/Movies.tsx",["95","96","97"],"import React, {Fragment, ReactElement, useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport movieApi from '../Api/MovieApi'\nimport Movie from '../Model/Movie'\nimport './Movies.css'\n\nconst api_key = 'b82c172e7bf6660516881c6a1ed616dd'\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500'\nconst DEFAULT_IMAGE_URL = 'https://d1csarkz8obe9u.cloudfront.net/posterpreviews/space-movie-poster-design-template-18133e937d93002c68b4649ea234d75f_screen.jpg?ts=1573539500'\n\nfunction Movies(): ReactElement {\n    console.log(\"Movies\")\n    const [movies, setMovies] = useState<Movie[]>([])\n    const [query, setQuery] = useState('')\n    const movies_query = '/3/discover/movie?api_key=' + api_key\n    const find_query = '/3/search/movie?api_key=' + api_key + '&language=en-US&query=' + query\n\n    useEffect(() => {\n        fetchMovies()\n    }, [])\n\n    async function fetchMovies() {\n        const response = await movieApi.get(movies_query)\n        const movies = response.data.results\n        setMovies(movies)\n    }\n\n    useEffect(() => {\n        async function find() {\n            const response = await movieApi.get(find_query)\n            const movies = response.data.results\n            setMovies(movies)\n        }\n\n        if (query.length > 0) {\n            find()\n        } else {\n            fetchMovies()\n        }\n\n    }, [query])\n\n    function getVoteAverageClass(average: number): string {\n        if (average > 7)\n            return 'green-title'\n        if (average >= 5)\n            return 'yellow-title'\n        return 'red-title'\n    }\n\n    return (\n        <div className='movies-page-container'>\n            <div className=\"search-container\">\n                <input type='text' placeholder='Find Movie...' onChange={(e) => setQuery(e.target.value)}/>\n            </div>\n            <div className={'movies-container'}>\n                {movies && movies.map(({id, title, poster_path, vote_average}) => (\n                    <Fragment key={id}>\n                        <Link to={'/' + id} className={'movie-item'}>\n                            <div className={'movie-item-image-container'}>\n                                <img className={'movie-item-image'}\n                                     src={poster_path != null ? IMAGE_URL + poster_path : DEFAULT_IMAGE_URL}/>\n                            </div>\n                            <div className={'movie-item-title-container'}>\n                                <h3 className={'movie-item-title'}>{title}</h3>\n                                <h4 className={getVoteAverageClass(vote_average)}>{vote_average}</h4>\n                            </div>\n                        </Link>\n                    </Fragment>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Movies","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/navigation/Navbar.tsx",["98","99","100"],"import React, {ReactElement, useContext} from \"react\";\nimport {Link} from 'react-router-dom'\nimport AuthContext from \"../Context/AuthContext\";\nimport './Navbar.css'\nimport {useSelector} from \"react-redux\";\nimport AuthState from \"../Model/AuthState\";\n\ninterface Props {\n}\n\nexport default function NavBar({}: Props): ReactElement {\n    // const authState = useContext(AuthContext)\n    const authState = useSelector<AuthState>((state: AuthState) => state) as AuthState\n    console.log(authState)\n\n    return (\n        <div className=\"nav-bar\">\n            <ul>\n                <Link to=\"/\">\n                    <li>Movies</li>\n                </Link>\n                {authState.isLogged ?\n                    <Link to='/favourites'>\n                        <li>Favourites</li>\n                    </Link>\n                    : null}\n                {authState.isLogged ?\n                    <Link to='/account'>\n                        <li>Account</li>\n                    </Link>\n                    : null}\n                {authState.isLogged ? null :\n                    <Link to=\"/login\">\n                        <li>Login</li>\n                    </Link>\n                }\n                {authState.isLogged ? null :\n                    <Link to=\"/register\">\n                        <li>Register</li>\n                    </Link>\n                }\n            </ul>\n        </div>\n    );\n}\n","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/FavouritesMovies/Favourites.tsx",["101","102","103","104","105","106"],"import React, {Fragment, ReactElement, useContext, useEffect, useReducer, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport AuthContext from '../Context/AuthContext'\nimport '../MoviesList/Movies.css'\nimport {useSelector} from \"react-redux\";\nimport AuthState from \"../Model/AuthState\";\n\nexport default function Favourites(): ReactElement {\n    // const authState = useContext(AuthContext)\n    const authState = useSelector<AuthState>((state: AuthState) => state) as AuthState\n\n    const movies = authState.user?.favourites\n\n    console.log(authState)\n\n    function getVoteAverageClass(average: number): string {\n        if (average > 7)\n            return 'green-title'\n        if (average >= 5)\n            return 'yellow-title'\n        return 'red-title'\n    }\n\n    return (\n        <div className='movies-page-container'>\n            <div className={'movies-container'}>\n                {movies && movies.map(({id, title, poster_path, vote_average}) => (\n                    <Fragment key={id}>\n                        <Link to={'/' + id} className={'movie-item'}>\n                            <div className={'movie-item-image-container'}>\n                                <img className={'movie-item-image'}\n                                     src={'https://image.tmdb.org/t/p/w500' + poster_path}/>\n                            </div>\n                            <div className={'movie-item-title-container'}>\n                                <h3 className={'movie-item-title'}>{title}</h3>\n                                <h4 className={getVoteAverageClass(vote_average)}>{vote_average}</h4>\n                            </div>\n                        </Link>\n                    </Fragment>\n                ))}\n            </div>\n        </div>\n    )\n}\n","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/MovieDetails/MovieDetails.tsx",["107","108","109","110","111","112"],"/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Api/MovieApi.tsx",[],"/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/ErrorBoundary.tsx",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"113","replacedBy":"117"},{"ruleId":"115","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":1,"column":30,"nodeType":"121","messageId":"122","endLine":1,"endColumn":40},{"ruleId":"119","severity":1,"message":"123","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":1,"column":30,"nodeType":"121","messageId":"122","endLine":1,"endColumn":40},{"ruleId":"119","severity":1,"message":"123","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":19},{"ruleId":"119","severity":1,"message":"124","line":11,"column":7,"nodeType":"121","messageId":"122","endLine":11,"endColumn":18},{"ruleId":"125","severity":1,"message":"126","line":18,"column":34,"nodeType":"127","messageId":"128","endLine":18,"endColumn":43},{"ruleId":"119","severity":1,"message":"129","line":21,"column":19,"nodeType":"121","messageId":"122","endLine":21,"endColumn":27},{"ruleId":"119","severity":1,"message":"130","line":43,"column":19,"nodeType":"121","messageId":"122","endLine":43,"endColumn":25},{"ruleId":"131","severity":1,"message":"132","line":49,"column":29,"nodeType":"133","messageId":"128","endLine":49,"endColumn":31},{"ruleId":"134","severity":1,"message":"135","line":49,"column":34,"nodeType":"136","messageId":"137","endLine":49,"endColumn":36},{"ruleId":"131","severity":1,"message":"132","line":49,"column":53,"nodeType":"133","messageId":"128","endLine":49,"endColumn":55},{"ruleId":"134","severity":1,"message":"135","line":49,"column":58,"nodeType":"136","messageId":"137","endLine":49,"endColumn":60},{"ruleId":"131","severity":1,"message":"132","line":49,"column":74,"nodeType":"133","messageId":"128","endLine":49,"endColumn":76},{"ruleId":"119","severity":1,"message":"120","line":1,"column":16,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"138","line":1,"column":28,"nodeType":"121","messageId":"122","endLine":1,"endColumn":38},{"ruleId":"119","severity":1,"message":"123","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":19},{"ruleId":"125","severity":1,"message":"126","line":13,"column":33,"nodeType":"127","messageId":"128","endLine":13,"endColumn":42},{"ruleId":"139","severity":1,"message":"140","line":20,"column":8,"nodeType":"141","endLine":20,"endColumn":10,"suggestions":"142"},{"ruleId":"139","severity":1,"message":"143","line":41,"column":8,"nodeType":"141","endLine":41,"endColumn":15,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":61,"column":33,"nodeType":"147","endLine":62,"endColumn":111},{"ruleId":"119","severity":1,"message":"120","line":1,"column":30,"nodeType":"121","messageId":"122","endLine":1,"endColumn":40},{"ruleId":"119","severity":1,"message":"123","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":19},{"ruleId":"125","severity":1,"message":"126","line":11,"column":32,"nodeType":"127","messageId":"128","endLine":11,"endColumn":41},{"ruleId":"119","severity":1,"message":"120","line":1,"column":40,"nodeType":"121","messageId":"122","endLine":1,"endColumn":50},{"ruleId":"119","severity":1,"message":"148","line":1,"column":52,"nodeType":"121","messageId":"122","endLine":1,"endColumn":61},{"ruleId":"119","severity":1,"message":"138","line":1,"column":63,"nodeType":"121","messageId":"122","endLine":1,"endColumn":73},{"ruleId":"119","severity":1,"message":"149","line":1,"column":75,"nodeType":"121","messageId":"122","endLine":1,"endColumn":83},{"ruleId":"119","severity":1,"message":"123","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":19},{"ruleId":"145","severity":1,"message":"146","line":31,"column":33,"nodeType":"147","endLine":32,"endColumn":93},{"ruleId":"119","severity":1,"message":"120","line":1,"column":30,"nodeType":"121","messageId":"122","endLine":1,"endColumn":40},{"ruleId":"119","severity":1,"message":"123","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":19},{"ruleId":"125","severity":1,"message":"126","line":20,"column":38,"nodeType":"127","messageId":"128","endLine":20,"endColumn":47},{"ruleId":"131","severity":1,"message":"132","line":42,"column":87,"nodeType":"133","messageId":"128","endLine":42,"endColumn":89},{"ruleId":"139","severity":1,"message":"150","line":46,"column":8,"nodeType":"141","endLine":46,"endColumn":10,"suggestions":"151"},{"ruleId":"119","severity":1,"message":"152","line":54,"column":19,"nodeType":"121","messageId":"122","endLine":54,"endColumn":27},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],["153"],["154"],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'AuthContext' is defined but never used.","'EMAIL_REGEX' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'setEmail' is assigned a value but never used.","'result' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'useReducer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMovies'. Either include it or remove the dependency array.","ArrayExpression",["155"],"React Hook useEffect has missing dependencies: 'fetchMovies' and 'find_query'. Either include them or remove the dependency array.",["156"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'authState.user?.favourites' and 'details_query'. Either include them or remove the dependency array.",["157"],"'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [fetchMovies]",{"range":"164","text":"165"},"Update the dependencies array to be: [fetchMovies, find_query, query]",{"range":"166","text":"167"},"Update the dependencies array to be: [authState.user?.favourites, details_query]",{"range":"168","text":"169"},[854,856],"[fetchMovies]",[1346,1353],"[fetchMovies, find_query, query]",[1921,1923],"[authState.user?.favourites, details_query]"]