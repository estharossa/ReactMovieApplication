[{"/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/index.tsx":"1","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/reportWebVitals.ts":"2","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/App.tsx":"3","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/Authorization/Login.tsx":"4","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/db/axios.tsx":"5","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/Authorization/Account.tsx":"6","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/Authorization/Register.tsx":"7","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/Context/AuthContext.tsx":"8","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/MoviesList/Movies.tsx":"9","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/MovieDetails/MovieDetails.tsx":"10","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/navigation/Navbar.tsx":"11","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/FavouritesMovies/Favourites.tsx":"12","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/Api/MovieApi.tsx":"13","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/index.tsx":"14","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/reportWebVitals.ts":"15","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/App.tsx":"16","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Context/AuthContext.tsx":"17","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Authorization/Login.tsx":"18","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Authorization/Account.tsx":"19","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/db/axios.tsx":"20","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Authorization/Register.tsx":"21","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/MoviesList/Movies.tsx":"22","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/navigation/Navbar.tsx":"23","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/MovieDetails/MovieDetails.tsx":"24","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/FavouritesMovies/Favourites.tsx":"25","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Api/MovieApi.tsx":"26"},{"size":500,"mtime":1608118526361,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1608118526361,"results":"29","hashOfConfig":"28"},{"size":3569,"mtime":1608461409232,"results":"30","hashOfConfig":"28"},{"size":1063,"mtime":1608199014655,"results":"31","hashOfConfig":"28"},{"size":123,"mtime":1608137987270,"results":"32","hashOfConfig":"28"},{"size":720,"mtime":1608208428650,"results":"33","hashOfConfig":"28"},{"size":1217,"mtime":1608208469058,"results":"34","hashOfConfig":"28"},{"size":200,"mtime":1608149441228,"results":"35","hashOfConfig":"28"},{"size":2790,"mtime":1608466173272,"results":"36","hashOfConfig":"28"},{"size":2740,"mtime":1608465413035,"results":"37","hashOfConfig":"28"},{"size":926,"mtime":1608212867086,"results":"38","hashOfConfig":"28"},{"size":1563,"mtime":1608467401451,"results":"39","hashOfConfig":"28"},{"size":128,"mtime":1608464137256,"results":"40","hashOfConfig":"28"},{"size":500,"mtime":1608487468480,"results":"41","hashOfConfig":"42"},{"size":425,"mtime":1608468241451,"results":"43","hashOfConfig":"42"},{"size":3569,"mtime":1608468241451,"results":"44","hashOfConfig":"42"},{"size":200,"mtime":1608468241451,"results":"45","hashOfConfig":"42"},{"size":1063,"mtime":1608487468480,"results":"46","hashOfConfig":"42"},{"size":720,"mtime":1608468241451,"results":"47","hashOfConfig":"42"},{"size":123,"mtime":1608468241451,"results":"48","hashOfConfig":"42"},{"size":1768,"mtime":1608486616766,"results":"49","hashOfConfig":"42"},{"size":2790,"mtime":1608487468480,"results":"50","hashOfConfig":"42"},{"size":926,"mtime":1608468241451,"results":"51","hashOfConfig":"42"},{"size":2740,"mtime":1608487468480,"results":"52","hashOfConfig":"42"},{"size":1563,"mtime":1608468241451,"results":"53","hashOfConfig":"42"},{"size":128,"mtime":1608468241451,"results":"54","hashOfConfig":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1smrfy",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"57"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13zhv6z",{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/index.tsx",[],["117","118"],"/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/reportWebVitals.ts",[],"/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/App.tsx",["119","120"],"import React, { lazy, Suspense, useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport AuthContext from \"./Context/AuthContext\";\nimport instance from \"./db/axios\";\nimport User from \"./Model/User\";\nimport Details from \"./Model/Details\";\nimport AuthState from \"./Model/AuthState\";\n\nconst API_USERS = '/people'\n\n// lazy initialaztion\n\nconst LoginPage = lazy(() => import(\"./Authorization/Login\"))\nconst RegistrationPage = lazy(() => import(\"./Authorization/Register\"))\nconst MoviesPage = lazy(() => import(\"./MoviesList/Movies\"))\nconst AccountPage = lazy(() => import(\"./Authorization/Account\"))\nconst NavigationBar = lazy(() => import(\"./navigation/Navbar\"))\nconst MovieDetailsPage = lazy(() => import(\"./MovieDetails/MovieDetails\"))\nconst FavouritesPage = lazy(() => import(\"./FavouritesMovies/Favourites\"))\n\nfunction App() {\n  const [users, setUsers] = useState<User[]>([])\n  const [isLogged, setIsLogged] = useState<AuthState>({isLogged: false})\n\n  useEffect(() => {\n    async function fetchUsers() {\n      const result = await instance.get(API_USERS)\n      setUsers([...result.data])\n    }\n\n    fetchUsers()\n  }, [])\n\n  function authenticateUser(username: string, password: string) {\n    const isPresent = users.find((user) => user.username === username && user.password === password) != null\n    const user = users.find((user) => user.username === username && user.password === password)\n    if (isPresent) {\n      setIsLogged({isLogged: isPresent, user: user})\n    }\n    else {\n      setIsLogged({isLogged: isPresent})\n    }\n  }\n\n  async function registerUser(user: User) {\n    const isPresent = users.find((u) => u.username === user.username && u.password === user.password) != null\n    if (isPresent) {\n      // TODO handle case when the user is already registered\n      return\n    }\n    const result = await instance.post(API_USERS, user)\n    setIsLogged({isLogged: true, user: user})\n  }\n\n  async function addToFavourites(movieDetails: Details) {\n    let id = isLogged.user?.id\n    let user = isLogged.user\n    let isMoviePresent = user?.favourites.find((movie) => movie.id === movieDetails.id) != null\n    if(!isMoviePresent) {\n      user?.favourites.push(movieDetails)\n      const response = await instance.patch(`${API_USERS}/${id}`, user)\n    }  \n  }\n\n  function logoutUser() {\n    setIsLogged({isLogged: false})\n  }\n  \n  return (\n      <AuthContext.Provider value={isLogged}>\n        <Router>\n          <Suspense fallback={<h1>Loading Route ...</h1>}>\n            <NavigationBar />\n              <div className=\"container\">\n                  <Switch>\n                    <Route path=\"/\" exact component={MoviesPage} />\n\n                    <Route path=\"/login\">\n                      <LoginPage login={authenticateUser} />\n                    </Route>\n\n                    <Route path=\"/register\">\n                      <RegistrationPage lastIndex={users.length} register={registerUser} />\n                    </Route>\n\n                    <Route path=\"/account\">\n                      <AccountPage logout={logoutUser} />\n                    </Route>\n                    \n                    <Route path=\"/favourites\">\n                      <FavouritesPage />\n                    </Route>\n\n                    <Route path=\"/:id\">\n                      <MovieDetailsPage add={addToFavourites} />\n                    </Route>\n\n                  </Switch>\n              </div>\n            </Suspense>\n        </Router>\n      </AuthContext.Provider>\n  );\n}\nexport default App;\n","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/Authorization/Login.tsx",["121"],"import React, { ReactElement, useContext, useState } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport AuthContext from '../Context/AuthContext';\nimport css from './Login.module.css'\n\ninterface Props{\n    login: (username: string, password: string) => void\n}\n\nexport default function Login({ login }: Props): ReactElement {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const authState = useContext(AuthContext)\n\n    function authorize() {\n        login(username, password)\n    }\n\n    return(\n        <div>\n            <div className={css.input_container}>\n                Login\n                <input type='text' placeholder='username' onChange={(e)=>setUsername(e.target.value)}></input>\n                <input type='text' placeholder='password'onChange={(e)=>setPassword(e.target.value)}></input>\n                <button onClick={() => authorize()}>Login</button>\n                {authState.isLogged == true ? <Redirect to='/account' /> : null}\n            </div>\n        </div>\n    );\n}","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/db/axios.tsx",[],"/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/Authorization/Account.tsx",[],"/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/Authorization/Register.tsx",[],"/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/Context/AuthContext.tsx",["122"],"import React from 'react'\nimport AuthState from '../Model/AuthState'\nimport User from '../Model/User'\n\nconst AuthContext = React.createContext<AuthState>({isLogged: false})\n\nexport default AuthContext","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/MoviesList/Movies.tsx",["123","124","125"],"/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/MovieDetails/MovieDetails.tsx",["126","127","128"],"/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/navigation/Navbar.tsx",["129"],"import React, { ReactElement, useContext } from \"react\";\nimport { Link } from 'react-router-dom'\nimport AuthContext from \"../Context/AuthContext\";\nimport './Navbar.css'\n\ninterface Props {}\n\nexport default function NavBar({}: Props): ReactElement {\n  const authState = useContext(AuthContext)\n  \n  return (\n    <div className=\"nav-bar\">\n      <ul>\n        <Link to=\"/\">\n          <li>Movies</li>\n        </Link>\n        {authState.isLogged ? \n        <Link to='/favourites'>\n          <li>Favourites</li>\n        </Link>\n        : null}\n        {authState.isLogged ? \n        <Link to='/account'>\n          <li>Account</li>\n        </Link>\n        : null}\n        {authState.isLogged ? null :  \n        <Link to=\"/login\">\n          <li>Login</li>\n        </Link>\n        }\n         {authState.isLogged ? null :  \n        <Link to=\"/register\">\n          <li>Register</li>\n        </Link>\n        }\n      </ul>\n    </div>\n  );\n}\n","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/FavouritesMovies/Favourites.tsx",["130","131","132","133"],"/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/Api/MovieApi.tsx",[],"/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/index.tsx",[],"/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/reportWebVitals.ts",[],["134","135"],"/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/App.tsx",["136","137"],"/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Context/AuthContext.tsx",["138"],"/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Authorization/Login.tsx",["139"],"import React, {ReactElement, useContext, useState} from 'react'\nimport {Redirect} from 'react-router-dom';\nimport AuthContext from '../Context/AuthContext';\nimport css from './Login.module.css'\n\ninterface Props {\n    login: (username: string, password: string) => void\n}\n\nexport default function Login({login}: Props): ReactElement {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const authState = useContext(AuthContext)\n\n    function authorize() {\n        login(username, password)\n    }\n\n    console.log(\"Username: \" + username)\n    console.log(\"Password: \" + password)\n\n    function generateUser(username: String, password: String) {\n\n    }\n\n    return (\n        <div>\n            <div className={css.input_container}>\n                Login\n                <input type='text' placeholder='username' onChange={(e) => setUsername(e.target.value)}/>\n                <input type='text' placeholder='password' onChange={(e) => setPassword(e.target.value)}/>\n                <button onClick={() => authorize()}>Login</button>\n                {authState.isLogged ? <Redirect to='/account'/> : null}\n            </div>\n        </div>\n    );\n}","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Authorization/Account.tsx",[],"/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/db/axios.tsx",[],"/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Authorization/Register.tsx",["140","141","142","143","144","145"],"/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/MoviesList/Movies.tsx",["146","147","148"],"import React, { Fragment, ReactElement, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport movieApi from '../Api/MovieApi'\nimport Movie from '../Model/Movie'\nimport './Movies.css'\n\nconst api_key = 'b82c172e7bf6660516881c6a1ed616dd'\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500'\nconst DEFAULT_IMAGE_URL = 'https://d1csarkz8obe9u.cloudfront.net/posterpreviews/space-movie-poster-design-template-18133e937d93002c68b4649ea234d75f_screen.jpg?ts=1573539500'\n\nfunction Movies(): ReactElement {\n    const [movies, setMovies] = useState<Movie[]>([])\n    const [query, setQuery] = useState('')\n    const movies_query = '/3/discover/movie?api_key=' + api_key\n    const find_query = '/3/search/movie?api_key=' + api_key + '&language=en-US&query=' + query\n\n    useEffect(() => {\n        fetchMovies()\n    }, [])\n\n    async function fetchMovies() {\n        const response = await movieApi.get(movies_query)\n        const movies = response.data.results\n        setMovies(movies)\n    }\n    \n    useEffect(() => {\n        async function find() {\n            const response = await movieApi.get(find_query)\n            const movies = response.data.results\n            setMovies(movies)\n        }\n        if (query.length > 0) {\n            find()\n        } else {\n            fetchMovies()\n        }\n        \n    }, [query])\n\n    function getVoteAverageClass(average: number):string {\n        if (average > 7)\n            return 'green-title'\n        if (average >= 5)\n            return 'yellow-title'\n        return 'red-title'\n    }\n\n    return (\n        <div className='movies-page-container'>\n            <div className=\"search-container\">\n                <input type='text' placeholder='Find Movie...' onChange={(e)=>setQuery(e.target.value)}></input>\n            </div>\n            <div className={'movies-container'}>\n                {movies && movies.map(({id, title, poster_path, vote_average}) => (\n                    <Fragment key={id} >\n                        <Link to={'/'+id} className={'movie-item'} >\n                            <div className={'movie-item-image-container'}>\n                                <img className={'movie-item-image'} src={ poster_path != null ? IMAGE_URL + poster_path : DEFAULT_IMAGE_URL } />\n                            </div>\n                            <div className={'movie-item-title-container'}>\n                                <h3 className={'movie-item-title'}>{title}</h3>\n                                <h4 className={getVoteAverageClass(vote_average)}>{vote_average}</h4>\n                            </div>\n                        </Link>\n                    </Fragment>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Movies","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/navigation/Navbar.tsx",["149"],"/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/MovieDetails/MovieDetails.tsx",["150","151","152","153"],"import React, { ReactElement, useContext, useEffect, useMemo, useState } from 'react'\nimport { useRouteMatch } from 'react-router-dom'\nimport movieApi from '../Api/MovieApi';\nimport AuthContext from '../Context/AuthContext';\nimport Details from '../Model/Details';\nimport './MovieDetails.css'\n\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500'\nconst DEFAULT_IMAGE_URL = 'https://d1csarkz8obe9u.cloudfront.net/posterpreviews/space-movie-poster-design-template-18133e937d93002c68b4649ea234d75f_screen.jpg?ts=1573539500'\n\ninterface Props {\n  add: (details: Details) => void\n}\n\nexport default function MovieDetails({ add }: Props): ReactElement {\n    const match = useRouteMatch<{ id: string }>();\n    const [movieDetails, setMovieDetails] = useState<Details>(\n      {id: 0, title: \"\", poster_path: \"\", vote_average: 0, overview: \"\"}\n    )\n    const authState = useContext(AuthContext)\n    const isPresent = !!authState.user?.favourites.find((movie) => movie.id == movieDetails.id)\n    const [isAlreadyPresent, setIsAlreadyPresent] = useState<Boolean>(isPresent)\n    const details_query = '3/movie/'+match.params.id+'?api_key=b82c172e7bf6660516881c6a1ed616dd'\n\n    console.log(authState)\n    console.log(match)\n\n    useEffect(() => {\n      async function fetchMovieDetails() {\n        const response = await movieApi.get(details_query)\n        const result = response.data\n        let details: Details = {\n          id: result.id, title: result.title, poster_path: result.poster_path, vote_average: result.vote_average, overview: result.overview\n        }\n        setMovieDetails(result)\n        setIsAlreadyPresent(!!authState.user?.favourites.find((movie) => movie.id == details.id))\n      }\n      fetchMovieDetails()\n    }, [])\n\n    function addToFavourites() {\n      setIsAlreadyPresent(true)\n      add(movieDetails) \n    }\n\n    return (\n        <div className={'movie-details-container'}>\n          <div className={'movie-details-mini-container'}>\n            <div className={'movie-img-container'}>\n              <img src={ movieDetails.poster_path != null ? IMAGE_URL + movieDetails.poster_path : DEFAULT_IMAGE_URL } alt='movie_poster' />\n            </div>\n            <div className={'movie-text-container'}>\n              <h2>{movieDetails.title}</h2>\n              <h3><span className={'movie-text'}>Rating:</span> {movieDetails.vote_average}</h3>\n              <p><span className={'movie-text'}>Overview:</span><br/>{movieDetails.overview}</p>\n              {authState.isLogged && !isAlreadyPresent ? <button onClick={() => addToFavourites()}>Add to Favourites</button> : null}\n              {authState.isLogged && isAlreadyPresent ? <h3 className={'favourite-text'}>You have added the movie to your favourites list</h3> : null}\n            </div>\n          </div>\n        </div>\n      );\n}","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/FavouritesMovies/Favourites.tsx",["154","155","156","157"],"import React, {Fragment, ReactElement, useContext, useEffect, useReducer, useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport AuthContext from '../Context/AuthContext'\nimport '../MoviesList/Movies.css'\n\nexport default function Favourites(): ReactElement {\n    const authState = useContext(AuthContext)\n    const movies = authState.user?.favourites\n\n    console.log(authState)\n\n    function getVoteAverageClass(average: number):string {\n        if (average > 7)\n            return 'green-title'\n        if (average >= 5)\n            return 'yellow-title'\n        return 'red-title'\n    }\n\n    return (\n        <div className='movies-page-container'>\n            <div className={'movies-container'}>\n                {movies && movies.map(({id, title, poster_path, vote_average}) => (\n                    <Fragment key={id}>\n                         <Link to={'/'+id} className={'movie-item'} >\n                            <div className={'movie-item-image-container'}>\n                                <img className={'movie-item-image'} src={'https://image.tmdb.org/t/p/w500' + poster_path} />\n                            </div>\n                            <div className={'movie-item-title-container'}>\n                                <h3 className={'movie-item-title'}>{title}</h3>\n                                <h4 className={getVoteAverageClass(vote_average)}>{vote_average}</h4>\n                            </div>\n                        </Link>\n                    </Fragment>\n                ))}\n            </div>\n        </div>\n    )\n}\n","/home/daniyar/Рабочий стол/react/ReactMovieApplication/movie/src/Api/MovieApi.tsx",[],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":52,"column":11,"nodeType":"164","messageId":"165","endLine":52,"endColumn":17},{"ruleId":"162","severity":1,"message":"166","line":62,"column":13,"nodeType":"164","messageId":"165","endLine":62,"endColumn":21},{"ruleId":"167","severity":1,"message":"168","line":26,"column":37,"nodeType":"169","messageId":"170","endLine":26,"endColumn":39},{"ruleId":"162","severity":1,"message":"171","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":12},{"ruleId":"172","severity":1,"message":"173","line":20,"column":8,"nodeType":"174","endLine":20,"endColumn":10,"suggestions":"175"},{"ruleId":"172","severity":1,"message":"176","line":41,"column":8,"nodeType":"174","endLine":41,"endColumn":15,"suggestions":"177"},{"ruleId":"178","severity":1,"message":"179","line":61,"column":33,"nodeType":"180","endLine":61,"endColumn":145},{"ruleId":"167","severity":1,"message":"168","line":21,"column":77,"nodeType":"169","messageId":"170","endLine":21,"endColumn":79},{"ruleId":"167","severity":1,"message":"168","line":33,"column":83,"nodeType":"169","messageId":"170","endLine":33,"endColumn":85},{"ruleId":"172","severity":1,"message":"181","line":36,"column":8,"nodeType":"174","endLine":36,"endColumn":10,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":8,"column":32,"nodeType":"185","messageId":"170","endLine":8,"endColumn":41},{"ruleId":"162","severity":1,"message":"186","line":1,"column":52,"nodeType":"164","messageId":"165","endLine":1,"endColumn":61},{"ruleId":"162","severity":1,"message":"187","line":1,"column":63,"nodeType":"164","messageId":"165","endLine":1,"endColumn":73},{"ruleId":"162","severity":1,"message":"188","line":1,"column":75,"nodeType":"164","messageId":"165","endLine":1,"endColumn":83},{"ruleId":"178","severity":1,"message":"179","line":27,"column":33,"nodeType":"180","endLine":27,"endColumn":125},{"ruleId":"158","replacedBy":"189"},{"ruleId":"160","replacedBy":"190"},{"ruleId":"162","severity":1,"message":"163","line":52,"column":11,"nodeType":"164","messageId":"165","endLine":52,"endColumn":17},{"ruleId":"162","severity":1,"message":"166","line":62,"column":13,"nodeType":"164","messageId":"165","endLine":62,"endColumn":21},{"ruleId":"162","severity":1,"message":"171","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":12},{"ruleId":"162","severity":1,"message":"191","line":22,"column":14,"nodeType":"164","messageId":"165","endLine":22,"endColumn":26},{"ruleId":"162","severity":1,"message":"192","line":7,"column":7,"nodeType":"164","messageId":"165","endLine":7,"endColumn":18},{"ruleId":"167","severity":1,"message":"168","line":28,"column":29,"nodeType":"169","messageId":"170","endLine":28,"endColumn":31},{"ruleId":"193","severity":1,"message":"194","line":28,"column":34,"nodeType":"195","messageId":"196","endLine":28,"endColumn":36},{"ruleId":"167","severity":1,"message":"168","line":28,"column":53,"nodeType":"169","messageId":"170","endLine":28,"endColumn":55},{"ruleId":"193","severity":1,"message":"194","line":28,"column":58,"nodeType":"195","messageId":"196","endLine":28,"endColumn":60},{"ruleId":"167","severity":1,"message":"168","line":28,"column":74,"nodeType":"169","messageId":"170","endLine":28,"endColumn":76},{"ruleId":"172","severity":1,"message":"173","line":19,"column":8,"nodeType":"174","endLine":19,"endColumn":10,"suggestions":"197"},{"ruleId":"172","severity":1,"message":"176","line":39,"column":8,"nodeType":"174","endLine":39,"endColumn":15,"suggestions":"198"},{"ruleId":"178","severity":1,"message":"179","line":59,"column":33,"nodeType":"180","endLine":59,"endColumn":145},{"ruleId":"183","severity":1,"message":"184","line":8,"column":32,"nodeType":"185","messageId":"170","endLine":8,"endColumn":41},{"ruleId":"162","severity":1,"message":"199","line":1,"column":54,"nodeType":"164","messageId":"165","endLine":1,"endColumn":61},{"ruleId":"167","severity":1,"message":"168","line":21,"column":77,"nodeType":"169","messageId":"170","endLine":21,"endColumn":79},{"ruleId":"167","severity":1,"message":"168","line":36,"column":83,"nodeType":"169","messageId":"170","endLine":36,"endColumn":85},{"ruleId":"172","severity":1,"message":"181","line":39,"column":8,"nodeType":"174","endLine":39,"endColumn":10,"suggestions":"200"},{"ruleId":"162","severity":1,"message":"186","line":1,"column":52,"nodeType":"164","messageId":"165","endLine":1,"endColumn":61},{"ruleId":"162","severity":1,"message":"187","line":1,"column":63,"nodeType":"164","messageId":"165","endLine":1,"endColumn":73},{"ruleId":"162","severity":1,"message":"188","line":1,"column":75,"nodeType":"164","messageId":"165","endLine":1,"endColumn":83},{"ruleId":"178","severity":1,"message":"179","line":27,"column":33,"nodeType":"180","endLine":27,"endColumn":125},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"@typescript-eslint/no-unused-vars","'result' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'User' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMovies'. Either include it or remove the dependency array.","ArrayExpression",["203"],"React Hook useEffect has missing dependencies: 'fetchMovies' and 'find_query'. Either include them or remove the dependency array.",["204"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'authState.user?.favourites' and 'details_query'. Either include them or remove the dependency array.",["205"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'useEffect' is defined but never used.","'useReducer' is defined but never used.","'useState' is defined but never used.",["201"],["202"],"'generateUser' is defined but never used.","'EMAIL_REGEX' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator",["206"],["207"],"'useMemo' is defined but never used.",["208"],"no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"209","fix":"215"},{"desc":"211","fix":"216"},{"desc":"213","fix":"217"},"Update the dependencies array to be: [fetchMovies]",{"range":"218","text":"219"},"Update the dependencies array to be: [fetchMovies, find_query, query]",{"range":"220","text":"221"},"Update the dependencies array to be: [authState.user?.favourites, details_query]",{"range":"222","text":"223"},{"range":"224","text":"219"},{"range":"225","text":"221"},{"range":"226","text":"223"},[858,860],"[fetchMovies]",[1391,1398],"[fetchMovies, find_query, query]",[1665,1667],"[authState.user?.favourites, details_query]",[832,834],[1335,1342],[1725,1727]]