[{"/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/index.tsx":"1","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/reportWebVitals.ts":"2","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/App.tsx":"3","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/Authorization/Login.tsx":"4","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/db/axios.tsx":"5","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/Authorization/Account.tsx":"6","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/Authorization/Register.tsx":"7","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/Context/AuthContext.tsx":"8","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/MoviesList/Movies.tsx":"9","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/MovieDetails/MovieDetails.tsx":"10","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/navigation/Navbar.tsx":"11","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/FavouritesMovies/Favourites.tsx":"12","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/Api/MovieApi.tsx":"13"},{"size":500,"mtime":1608118526361,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1608118526361,"results":"16","hashOfConfig":"15"},{"size":3569,"mtime":1608461409232,"results":"17","hashOfConfig":"15"},{"size":1063,"mtime":1608199014655,"results":"18","hashOfConfig":"15"},{"size":123,"mtime":1608137987270,"results":"19","hashOfConfig":"15"},{"size":720,"mtime":1608208428650,"results":"20","hashOfConfig":"15"},{"size":1217,"mtime":1608208469058,"results":"21","hashOfConfig":"15"},{"size":200,"mtime":1608149441228,"results":"22","hashOfConfig":"15"},{"size":2790,"mtime":1608466173272,"results":"23","hashOfConfig":"15"},{"size":2740,"mtime":1608465413035,"results":"24","hashOfConfig":"15"},{"size":926,"mtime":1608212867086,"results":"25","hashOfConfig":"15"},{"size":1552,"mtime":1608461306504,"results":"26","hashOfConfig":"15"},{"size":128,"mtime":1608464137256,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1smrfy",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/index.tsx",[],["60","61"],"/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/reportWebVitals.ts",[],"/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/App.tsx",["62","63"],"import React, { lazy, Suspense, useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport AuthContext from \"./Context/AuthContext\";\nimport instance from \"./db/axios\";\nimport User from \"./Model/User\";\nimport Details from \"./Model/Details\";\nimport AuthState from \"./Model/AuthState\";\n\nconst API_USERS = '/people'\n\n// lazy initialaztion\n\nconst LoginPage = lazy(() => import(\"./Authorization/Login\"))\nconst RegistrationPage = lazy(() => import(\"./Authorization/Register\"))\nconst MoviesPage = lazy(() => import(\"./MoviesList/Movies\"))\nconst AccountPage = lazy(() => import(\"./Authorization/Account\"))\nconst NavigationBar = lazy(() => import(\"./navigation/Navbar\"))\nconst MovieDetailsPage = lazy(() => import(\"./MovieDetails/MovieDetails\"))\nconst FavouritesPage = lazy(() => import(\"./FavouritesMovies/Favourites\"))\n\nfunction App() {\n  const [users, setUsers] = useState<User[]>([])\n  const [isLogged, setIsLogged] = useState<AuthState>({isLogged: false})\n\n  useEffect(() => {\n    async function fetchUsers() {\n      const result = await instance.get(API_USERS)\n      setUsers([...result.data])\n    }\n\n    fetchUsers()\n  }, [])\n\n  function authenticateUser(username: string, password: string) {\n    const isPresent = users.find((user) => user.username === username && user.password === password) != null\n    const user = users.find((user) => user.username === username && user.password === password)\n    if (isPresent) {\n      setIsLogged({isLogged: isPresent, user: user})\n    }\n    else {\n      setIsLogged({isLogged: isPresent})\n    }\n  }\n\n  async function registerUser(user: User) {\n    const isPresent = users.find((u) => u.username === user.username && u.password === user.password) != null\n    if (isPresent) {\n      // TODO handle case when the user is already registered\n      return\n    }\n    const result = await instance.post(API_USERS, user)\n    setIsLogged({isLogged: true, user: user})\n  }\n\n  async function addToFavourites(movieDetails: Details) {\n    let id = isLogged.user?.id\n    let user = isLogged.user\n    let isMoviePresent = user?.favourites.find((movie) => movie.id === movieDetails.id) != null\n    if(!isMoviePresent) {\n      user?.favourites.push(movieDetails)\n      const response = await instance.patch(`${API_USERS}/${id}`, user)\n    }  \n  }\n\n  function logoutUser() {\n    setIsLogged({isLogged: false})\n  }\n  \n  return (\n      <AuthContext.Provider value={isLogged}>\n        <Router>\n          <Suspense fallback={<h1>Loading Route ...</h1>}>\n            <NavigationBar />\n              <div className=\"container\">\n                  <Switch>\n                    <Route path=\"/\" exact component={MoviesPage} />\n\n                    <Route path=\"/login\">\n                      <LoginPage login={authenticateUser} />\n                    </Route>\n\n                    <Route path=\"/register\">\n                      <RegistrationPage lastIndex={users.length} register={registerUser} />\n                    </Route>\n\n                    <Route path=\"/account\">\n                      <AccountPage logout={logoutUser} />\n                    </Route>\n                    \n                    <Route path=\"/favourites\">\n                      <FavouritesPage />\n                    </Route>\n\n                    <Route path=\"/:id\">\n                      <MovieDetailsPage add={addToFavourites} />\n                    </Route>\n\n                  </Switch>\n              </div>\n            </Suspense>\n        </Router>\n      </AuthContext.Provider>\n  );\n}\nexport default App;\n","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/Authorization/Login.tsx",["64"],"import React, { ReactElement, useContext, useState } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport AuthContext from '../Context/AuthContext';\nimport css from './Login.module.css'\n\ninterface Props{\n    login: (username: string, password: string) => void\n}\n\nexport default function Login({ login }: Props): ReactElement {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const authState = useContext(AuthContext)\n\n    function authorize() {\n        login(username, password)\n    }\n\n    return(\n        <div>\n            <div className={css.input_container}>\n                Login\n                <input type='text' placeholder='username' onChange={(e)=>setUsername(e.target.value)}></input>\n                <input type='text' placeholder='password'onChange={(e)=>setPassword(e.target.value)}></input>\n                <button onClick={() => authorize()}>Login</button>\n                {authState.isLogged == true ? <Redirect to='/account' /> : null}\n            </div>\n        </div>\n    );\n}","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/db/axios.tsx",[],"/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/Authorization/Account.tsx",[],"/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/Authorization/Register.tsx",[],"/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/Context/AuthContext.tsx",["65"],"import React from 'react'\nimport AuthState from '../Model/AuthState'\nimport User from '../Model/User'\n\nconst AuthContext = React.createContext<AuthState>({isLogged: false})\n\nexport default AuthContext","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/MoviesList/Movies.tsx",["66","67","68"],"/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/MovieDetails/MovieDetails.tsx",["69","70","71"],"/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/navigation/Navbar.tsx",["72"],"import React, { ReactElement, useContext } from \"react\";\nimport { Link } from 'react-router-dom'\nimport AuthContext from \"../Context/AuthContext\";\nimport './Navbar.css'\n\ninterface Props {}\n\nexport default function NavBar({}: Props): ReactElement {\n  const authState = useContext(AuthContext)\n  \n  return (\n    <div className=\"nav-bar\">\n      <ul>\n        <Link to=\"/\">\n          <li>Movies</li>\n        </Link>\n        {authState.isLogged ? \n        <Link to='/favourites'>\n          <li>Favourites</li>\n        </Link>\n        : null}\n        {authState.isLogged ? \n        <Link to='/account'>\n          <li>Account</li>\n        </Link>\n        : null}\n        {authState.isLogged ? null :  \n        <Link to=\"/login\">\n          <li>Login</li>\n        </Link>\n        }\n         {authState.isLogged ? null :  \n        <Link to=\"/register\">\n          <li>Register</li>\n        </Link>\n        }\n      </ul>\n    </div>\n  );\n}\n","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/FavouritesMovies/Favourites.tsx",["73","74","75"],"import React, { Fragment, ReactElement, useContext, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport AuthContext from '../Context/AuthContext'\nimport '../MoviesList/Movies.css'\n\nexport default function Favourites(): ReactElement {\n    const authState = useContext(AuthContext)\n    const movies = authState.user?.favourites\n\n    console.log(authState)\n\n    function getVoteAverageClass(average: number):string {\n        if (average > 7)\n            return 'green-title'\n        if (average >= 5)\n            return 'yellow-title'\n        return 'red-title'\n    }\n\n    return (\n        <div className='movies-page-container'>\n            <div className={'movies-container'}>\n                {movies && movies.map(({id, title, poster_path, vote_average}) => (\n                    <Fragment key={id}>\n                         <Link to={'/'+id} className={'movie-item'} >\n                            <div className={'movie-item-image-container'}>\n                                <img className={'movie-item-image'} src={'https://image.tmdb.org/t/p/w500' + poster_path} />\n                            </div>\n                            <div className={'movie-item-title-container'}>\n                                <h3 className={'movie-item-title'}>{title}</h3>\n                                <h4 className={getVoteAverageClass(vote_average)}>{vote_average}</h4>\n                            </div>\n                        </Link>\n                    </Fragment>\n                ))}\n            </div>\n        </div>\n    )\n}","/home/daniyar/Рабочий стол/ReactMovieApplication/movie/src/Api/MovieApi.tsx",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":52,"column":11,"nodeType":"82","messageId":"83","endLine":52,"endColumn":17},{"ruleId":"80","severity":1,"message":"84","line":62,"column":13,"nodeType":"82","messageId":"83","endLine":62,"endColumn":21},{"ruleId":"85","severity":1,"message":"86","line":26,"column":37,"nodeType":"87","messageId":"88","endLine":26,"endColumn":39},{"ruleId":"80","severity":1,"message":"89","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":12},{"ruleId":"90","severity":1,"message":"91","line":20,"column":8,"nodeType":"92","endLine":20,"endColumn":10,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"94","line":41,"column":8,"nodeType":"92","endLine":41,"endColumn":15,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":61,"column":33,"nodeType":"98","endLine":61,"endColumn":145},{"ruleId":"85","severity":1,"message":"86","line":21,"column":77,"nodeType":"87","messageId":"88","endLine":21,"endColumn":79},{"ruleId":"85","severity":1,"message":"86","line":33,"column":83,"nodeType":"87","messageId":"88","endLine":33,"endColumn":85},{"ruleId":"90","severity":1,"message":"99","line":36,"column":8,"nodeType":"92","endLine":36,"endColumn":10,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":8,"column":32,"nodeType":"103","messageId":"88","endLine":8,"endColumn":41},{"ruleId":"80","severity":1,"message":"104","line":1,"column":53,"nodeType":"82","messageId":"83","endLine":1,"endColumn":62},{"ruleId":"80","severity":1,"message":"105","line":1,"column":64,"nodeType":"82","messageId":"83","endLine":1,"endColumn":72},{"ruleId":"96","severity":1,"message":"97","line":27,"column":33,"nodeType":"98","endLine":27,"endColumn":125},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"@typescript-eslint/no-unused-vars","'result' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'User' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMovies'. Either include it or remove the dependency array.","ArrayExpression",["108"],"React Hook useEffect has missing dependencies: 'fetchMovies' and 'find_query'. Either include them or remove the dependency array.",["109"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'authState.user?.favourites' and 'details_query'. Either include them or remove the dependency array.",["110"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [fetchMovies]",{"range":"117","text":"118"},"Update the dependencies array to be: [fetchMovies, find_query, query]",{"range":"119","text":"120"},"Update the dependencies array to be: [authState.user?.favourites, details_query]",{"range":"121","text":"122"},[858,860],"[fetchMovies]",[1391,1398],"[fetchMovies, find_query, query]",[1665,1667],"[authState.user?.favourites, details_query]"]